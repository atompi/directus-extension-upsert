"use strict";const e={success:!0,msg:"Success",code:200,data:null};module.exports=(s,{database:c,services:t,exceptions:a})=>{const{ItemsService:n}=t,{ServiceUnavailableException:o}=a;s.post("/upsert",(async(s,c,t)=>{try{let t=s.body||{};const{collection:a="",key:o={},body:i={}}=t;if(!a)return c.json({...e,success:!1,msg:"Missing collection name"});if(!o||!Object.keys(o).length)return c.json({...e,success:!1,msg:"Missing key"});const r=new n(a,{schema:s.schema,accountability:s.accountability}),l=r.schema.collections[a].primary,u={...o},m=await r.knex.select(l).from(a).where(u).first();m?(await r.updateOne(m[l],i),c.json({...e,msg:"Update Success"})):(await r.createOne(i),c.json({...e,msg:"Create Success",code:201}))}catch(e){return t(new o(e.message))}}))};
