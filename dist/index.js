"use strict";const e={success:!0,msg:"Success",code:200,data:null};var s={id:"upsert",handler:async(s,{services:c,database:t,getSchema:o,exceptions:n})=>{const{ItemsService:a}=c,{ServiceUnavailableException:i,RouteNotFoundException:l}=n;s.get("/",((e,s)=>s.send("Hello, World!"))),s.get("/intro",((e,s)=>s.send("Nice to meet you."))),s.get("/:collection",((e,s)=>s.send(`Nice to meet you. ${e.params.collection}`))),s.post("/:collection",(async(s,c,t)=>{try{const{collection:o}=s.params;if(!o)return t(new l);let n=s.body||{};console.log(n);const{key:i={},body:r={}}=n;if(!i||!Object.keys(i).length)return c.json({...e,success:!1,msg:"Missing key"});const u=new a(o,{schema:s.schema,accountability:s.accountability}),m=u.schema.collections[o].primary,d={...i};console.log(d);const g=await u.knex.select(m).from(o).where(d).first();console.log(g),g?(await u.updateOne(g[m],r),c.json({...e,msg:"Update Success"})):(await u.createOne(r),c.json({...e,msg:"Create Success",code:201}))}catch(e){return t(new i(e.message))}}))}};module.exports=s;
